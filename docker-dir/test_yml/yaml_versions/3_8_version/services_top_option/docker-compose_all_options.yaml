version: "3.8"
services:
  #============================================================//
#   "Services" top level option and its options
  #============================================================//

#  annotations:
#    com.example.foo: bar
#  annotations:
#    - com.example.foo=bar

  #============================================================//
  #https://docs.docker.com/compose/compose-file/05-services/#blkio_config
  test1:
    image: busybox
    blkio_config:
      weight: 300
      weight_device:
        - path: /dev/sda
          weight: 400
      device_read_bps:
        - path: /dev/sdb
          rate: '12mb'
      device_read_iops:
        - path: /dev/sdb
          rate: 120
      device_write_bps:
        - path: /dev/sdb
          rate: '1024k'
      device_write_iops:
        - path: /dev/sdb
          rate: 30

  #============================================================//
  #https://docs.docker.com/compose/compose-file/05-services/#cpu_shares
  test2:
    image: openjdk
    cpu_count: 2
    cpu_percent: 30
    cpu_shares: 2
    cpu_period:  ""
    cpu_quota: ""
    cpu_rt_runtime: '400ms'
    cpu_rt_period: '1400us'
    cpus:  0.000
    cpuset: 0-3

  #============================================================//

  test3:
    image: openjdk
    cap_add:
      - ALL
    cap_drop:
      - NET_ADMIN
      - SYS_ADMIN

  #============================================================//
  # https://docs.docker.com/compose/compose-file/05-services/#cgroup
  test4:
    image: openjdk
    cgroup:
      host: smth
      private: smth
    cgroup_parent: m-executor-abcd

  #============================================================//

  test5:
    image: openjdk
    command: bundle exec thin -p 3000
#    command: [ "bundle", "exec", "thin", "-p", "3000" ]

  #============================================================//

  test6:
    image: openjdk
    configs:
      - my_config
      - my_other_config
  test7:
    image: openjdk
    configs:
      - source: my_config1
        target: /redis_config
        uid: "103"
        gid: "103"
        mode: 0440
    container_name: test

  #============================================================//

  test8:
    image: openjdk
    credential_spec:
      file: my-credential-spec.json
  test9:
    image: myimage:latest
    credential_spec:
      config: my_credential_spec

  #============================================================//
  #https://docs.docker.com/compose/compose-file/05-services/#long-syntax-1
  test10:
    image: openjdk
    depends_on:
      db:
        condition: service_healthy
        restart: true
        required: true
  test11:
    image: openjdk
    depends_on:
      - db
      - redis
  redis:
    image: redis
  db:
    image: postgres

  #============================================================//
  # https://docs.docker.com/compose/compose-file/deploy/
  test12:
    image: openjdk
    deploy:
      endpoint_mode: vip
      labels:
        com.example.description: "This label will appear on the web service"
      mode: replicated
      placement:
        max_replicas_per_node: 2
        preferences:
          datacenter: us-east
#          - datacenter=us-east
        constraints:
          - disktype=ssd
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
          pids: 1
        reservations:
          cpus: '0.25'
          memory: 20M
          devices:
            - capabilities:  ["nvidia-compute"]
              driver: nvidia
              device_ids: ["GPU-f123d1c9-26bb-df9b-1c23-4a731f61d8c7"]
              count: 2
              options:
                virtualization: false

      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      rollback_config:
        delay: 0s
        failure_action: continue
        max_failure_ratio: 0
        monitor: 0s
        order: stop-first
        parallelism: 0
      update_config:
        monitor: 0s
        max_failure_ratio:  0
        failure_action:  continue
        delay: 0s
        order: stop-first
        parallelism: 0

  #============================================================//
  # https://docs.docker.com/compose/compose-file/develop/
  test13:
    image: openjdk
    develop:
      watch:
        - action: sync+restart
          ignore:
            - some_modules/
          path: ./webapp/html
          target:


  #    example from spec:
  frontend:
    image: example/webapp
    build: ./webapp
    develop:
      watch:
        # sync static content
        - path: ./webapp/index.html
          action: sync
          target: /app/
          ignore:
            - node_modules/
  backend:
    image: example/backend
    build: ./backend
    develop:
       watch:
        # rebuild image and recreate service
        - path: ./backend/src
          action: rebuild


  #============================================================//

  test14:
    image: openjdk
    device_cgroup_rules:
      - 'c 1:3 mr'
      - 'a 7:* rmw'
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"
      - "/dev/sda:/dev/xvda:rwm"
#    dns: 8.8.8.8
    dns:
      - 8.8.8.8
      - 9.9.9.9
    dns_opt:
      - use-vc
      - no-tld-query
#    dns_search: example.com
    dns_search:
      - dc1.example.com
      - dc2.example.com
    domainname: myname

  #============================================================//

  test15:
    image: openjdk
    entrypoint: /code/entrypoint.sh
  test16:
    image: openjdk
    entrypoint:
      - php
      - -d
      - zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20100525/xdebug.so
      - -d
      - memory_limit=-1
      - vendor/bin/phpunit

  #============================================================//

  test17:
    image: openjdk
    env_file: .env
  test18:
    image: openjdk
    env_file:
      - ./a.env
      - ./b.env
  test19:
    image: openjdk
    env_file:
      - path: ./default.env
        required: true # default
      - path: ./override.env
        required: false
  #============================================================//

  test20:
    image: openjdk
    environment:
      RACK_ENV: development
      SHOW: "true"
      USER_INPUT:
  test21:
    image: openjdk
    environment:
    - RACK_ENV=development
    - SHOW=true
    - USER_INPUT
  #============================================================//

  test22:
    image: openjdk
    expose:
      - "3000"
      - "8000"
      - "8080-8085/tcp"
  #============================================================//

  test23:
    image: openjdk
    extends:
      file: common.yml
      service: db

  #      =====
  base:
    image: busybox
    user: root
  common:
    image: busybox
    extends:
     service: base
  cli:
    extends:
      service: common
#      =====
  common1:
    image: busybox
    security_opt:
      - label:role:ROLE
  cli1:
    extends:
        service: common1
    security_opt:
      - label:user:USER
  #============================================================//

  test25:
    image: openjdk
    external_links:
      - redis
      - database:mysql
      - database:postgresql
  #============================================================//
  #https://docs.docker.com/compose/compose-file/05-services/#long-syntax-2
  test26:
    image: openjdk
    extra_hosts:
      - "somehost=162.242.195.82"
      - "otherhost=50.31.209.229"
      - "myhostv6=::1"
      - "myhostv6=[::1]"
      - "somehost:162.242.195.82"
      - "myhostv6:::1"
  test27:
    image: openjdk
    extra_hosts:
      somehost: "162.242.195.82"
      otherhost: "50.31.209.229"
      myhostv6: "::1"

  #============================================================//
  #https://docs.docker.com/compose/compose-file/05-services/#group_add
  test28:
    image: openjdk
    group_add:
      - mail


  #============================================================//
  #https://docs.docker.com/compose/compose-file/05-services/#healthcheck
  test29:
    image: openjdk
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
      disable: false

  #============================================================//

  test30:
    image: openjdk
    hostname: localhost
    init: true
#    ipc: "shareable"
    ipc: "service:[service name]"

  #============================================================//

  test31:
    image: openjdk
    isolation: default

  #============================================================//

  test32:
    image: openjdk
    labels:
      com.example.description: "Accounting webapp"
      com.example.department: "Finance"
      com.example.label-with-empty-value: ""
  test33:
    image: openjdk
    labels:
      - "com.example.description=Accounting webapp"
      - "com.example.department=Finance"
      - "com.example.label-with-empty-value"

  #============================================================//

  test34:
    image: openjdk
    links:
      - db
      - db:database
      - redis

  #============================================================//

  test35:
    image: openjdk
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://192.168.0.42:123"

  #============================================================//

  test36:
    image: openjdk
    mac_address: smth

  #============================================================//
  #https://docs.docker.com/compose/compose-file/05-services/#mem_limit
  test37:
    image: openjdk
    mem_limit: 1024kb
    mem_reservation: 2048k
    mem_swappiness: 100
    memswap_limit: 0

  #============================================================//

  test38:
    image: openjdk
#    network_mode: "host"
    network_mode: "none"
#    network_mode: "service:[service name]"

  #============================================================//
  # https://docs.docker.com/compose/compose-file/05-services/#link_local_ips
  test39:
    image: openjdk
    networks:
      - some-network
      - other-network
  test40:
    image: openjdk
    networks:
      back-tier:
          aliases:
            - mysql
          ipv4_address: 172.16.238.10
          ipv6_address: 2001:3984:3989::10
          priority: 1
          link_local_ips:
            - 57.123.22.11
            - 57.123.22.13
          mac_address: smth

#example from spec
  frontend1:
    image: example/webapp
    networks:
      - front-tier
      - back-tier

  monitoring1:
    image: example/monitoring
    networks:
      - admin

  backend1:
    image: example/backend
    networks:
      back-tier:
        aliases:
          - database
      admin:
        aliases:
          - mysql


  #============================================================//
  # https://docs.docker.com/compose/compose-file/05-services/#pids_limit
  test41:
    image: openjdk
    oom_kill_disable: false
    oom_score_adj: smth
    pid: 1
    pids_limit: 10

  #============================================================//

  test42:
    image: openjdk
    platform: darwin
#    platform: windows/amd64
#    platform: linux/arm64/v8

  #============================================================//
  # https://docs.docker.com/compose/compose-file/05-services/#long-syntax-3
  test43:
    image: openjdk
    ports:
      - "3000"
      - "3000-3005"
      - "8000:8000"
      - "9090-9091:8080-8081"
      - "49100:22"
      - "8000-9000:80"
      - "127.0.0.1:8001:8001"
      - "127.0.0.1:5000-5010:5000-5010"
      - "6060:6060/udp"
  test44:
    image: openjdk
    ports:
      - name: web
        target: 80
        host_ip: 127.0.0.1
        published: "8080"
        protocol: tcp
        app_protocol: http
        mode: host

      - name: web-secured
        target: 443
        host_ip: 127.0.0.1
        published: "8083-9000"
        protocol: tcp
        app_protocol: https
        mode: host


  #============================================================//

  test45:
    image: openjdk
    privileged: false

  #============================================================//

  test46:
    image: openjdk
    profiles: ["frontend"]
  test47:
    image: openjdk
    profiles:
      - debug

  #============================================================//

  test48:
    image: openjdk
    pull_policy: build
    read_only: false
    restart: always

  #============================================================//
  # https://docs.docker.com/compose/compose-file/05-services/#runtime
  test49:
    image: openjdk
    command: true
    runtime: runc


  #============================================================//
  # https://docs.docker.com/compose/compose-file/05-services/#scale
  test50:
    image: openjdk
    scale: 2

  #============================================================//

  test51:
    image: openjdk
    secrets:
      - server-certificate
  test52:
    image: openjdk
    secrets:
      - source: server-certificate
        target: server.cert
        uid: "103"
        gid: "103"
        mode: 0440

  #============================================================//

  test53:
    image: openjdk
    security_opt:
      - label:user:USER
      - label:role:ROLE
    shm_size: 2048k

  #============================================================//

  test54:
    image: openjdk
    stdin_open: false
    stop_grace_period: 1m30s
    stop_signal: SIGUSR1

  #============================================================//
  #https://docs.docker.com/compose/compose-file/05-services/#storage_opt
  test55:
    image: openjdk
    storage_opt:
      size: '1G'

  #============================================================//

  test56:
    image: openjdk
    sysctls:
      net.core.somaxconn: 1024
      net.ipv4.tcp_syncookies: 0
  test57:
    image: openjdk
    sysctls:
      - net.core.somaxconn=1024
      - net.ipv4.tcp_syncookies=0

  #============================================================//

  test58:
    image: openjdk
    tmpfs:
      - /run
      - /tmp
  test59:
    image: openjdk
    tmpfs: /run

  #============================================================//
  test60:
    image: openjdk
    tty: false
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000

  #============================================================//

  test61:
    image: openjdk
    user: root
    userns_mode: "host"

  #============================================================//
  #https://docs.docker.com/compose/compose-file/05-services/#uts
  test62:
    image: openjdk
    uts: "host"

  #============================================================//
  #https://docs.docker.com/compose/compose-file/05-services/#long-syntax-5
  test63:
    image: openjdk
    volumes:
      - type: volume
        source: db-data
        target: /data
        volume:
          nocopy: true
          subpath: sub

      - type: bind
        source: /var/run/postgres/postgres.sock
        target: /var/run/postgres/postgres.sock
        read_only: false
        bind:
          propagation: private
          create_host_path: /tmp1
          selinux: Z
        consistency: cached
        tmpfs:
          size: 1024
          mode: smth


  #============================================================//
  # https://docs.docker.com/compose/compose-file/05-services/#volumes_from
  test64:
    image: openjdk
    volumes_from:
      - service_name
      - service_name:ro
      - container:container_name
      - container:container_name:rw

  #============================================================//

  test65:
    image: openjdk
    working_dir: .




  #============================================================//
  #============================================================//
  #============================================================//

configs:
  my_config:
    file: ./my_config.txt
  my_other_config:
    external: true
  my_config1:
    external: true
  my_credentials_spec:
    file: ./my-credential-spec.json|

networks:
  front-tier:
  back-tier:
  admin:

secrets:
  server-certificate:
    file: ./server.cert